{"version":3,"sources":["../src/api/sqlite.ts"],"sourcesContent":["import jsBridge from \"../bridge\";\r\nimport { MResponse, MResponseWithData } from \"../types\";\r\n\r\nexport function sqliteOpenDB(\r\n  path: string,\r\n): Promise<MResponseWithData<{ dbKey: number }>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteOpenDB\",\r\n    data: {\r\n      path,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteCloseDB(dbKey: number): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteCloseDB\",\r\n    data: {\r\n      dbKey,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqlitePrepare(\r\n  dbKey: number,\r\n  sql: string,\r\n): Promise<MResponseWithData<{ stmtKey: number; reader: boolean }>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqlitePrepare\",\r\n    data: {\r\n      dbKey,\r\n      sql,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteStatementAll(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<MResponseWithData<unknown[]>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteStatementAll\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteStatementRun(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<\r\n  MResponseWithData<{\r\n    changes: number | bigint;\r\n    lastInsertRowid: number | bigint;\r\n  }>\r\n> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteStatementRun\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteExecute(\r\n  dbKey: number,\r\n  sql: string,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<\r\n  MResponseWithData<{\r\n    reader: boolean;\r\n    runRes?: {\r\n      changes: number | bigint;\r\n      lastInsertRowid: number | bigint;\r\n    };\r\n    entityData?: unknown[];\r\n  }>\r\n> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteExecute\",\r\n    data: {\r\n      dbKey,\r\n      sql,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteCreateIterator(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteCreateIterator\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteIteratorNext(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n): Promise<MResponseWithData<unknown | undefined>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteIteratorNext\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteIteratorRelease(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteIteratorRelease\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n    },\r\n  });\r\n}\r\n"],"mappings":";;;;;AAGO,SAAS,aACd,MAC+C;AAC/C,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,cAAc,OAAmC;AAC/D,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,cACd,OACA,KACkE;AAClE,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,mBACd,OACA,SACA,YACuC;AACvC,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,mBACd,OACA,SACA,YAMA;AACA,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,cACd,OACA,KACA,YAUA;AACA,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,qBACd,OACA,SACA,YACoB;AACpB,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,mBACd,OACA,SACiD;AACjD,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,sBACd,OACA,SACoB;AACpB,SAAO,eAAS,WAAW;AAAA,IACzB,KAAK;AAAA,IACL,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;","names":[]}