{"version":3,"sources":["../src/bridge/index.ts","../src/api/sqlite.ts"],"sourcesContent":["import { MResponseStatusCode } from \"../types\";\r\nimport { MRequest } from \"../types/request\";\r\n\r\ninterface WebKitCallable {\r\n  postMessage: (data: string) => Promise<string>;\r\n}\r\ndeclare global {\r\n  interface Window {\r\n    webkit?: {\r\n      messageHandlers?: {\r\n        MinipNativeInteraction?: WebKitCallable;\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nlet jsBridge: {\r\n  callNative: <T>(req?: MRequest<T>) => Promise<any>;\r\n  callNativeSync: <T>(req?: MRequest<T>) => any;\r\n};\r\n\r\n// apple webkit\r\nif (window.webkit?.messageHandlers?.MinipNativeInteraction) {\r\n  const _callNative = window.webkit.messageHandlers.MinipNativeInteraction;\r\n  jsBridge = {\r\n    callNative(req) {\r\n      return _callNative\r\n        .postMessage(JSON.stringify(req))\r\n        .then((res) => JSON.parse(res))\r\n        .then((res) => {\r\n          if (res.code === MResponseStatusCode.SUCCESS) {\r\n            res.isSuccess = () => true;\r\n            const hashData = res.data !== null && res.data !== undefined;\r\n            res.hasData = () => hashData;\r\n            return res;\r\n          } else {\r\n            throw new Error(res.msg ?? \"Unknown error, res: \");\r\n          }\r\n        });\r\n    },\r\n    callNativeSync(req) {\r\n      const res = prompt(JSON.stringify(req));\r\n      if (res) {\r\n        const r = JSON.parse(res);\r\n        r.isSuccess = () => true;\r\n        const hashData = r.data !== null && r.data !== undefined;\r\n        r.hasData = () => hashData;\r\n        return r;\r\n      }\r\n      return {\r\n        code: MResponseStatusCode.FAILED,\r\n        msg: \"Unknown error\",\r\n        isSuccess: () => false,\r\n        hasData: () => false,\r\n      };\r\n    },\r\n  };\r\n}\r\n// error\r\nelse {\r\n  jsBridge = {\r\n    callNative() {\r\n      return new Promise((_, reject) => {\r\n        reject(\"Cannot find JavaScript Bridge!!!\");\r\n      });\r\n    },\r\n    callNativeSync() {\r\n      return {\r\n        code: MResponseStatusCode.FAILED,\r\n        msg: \"Cannot find JavaScript Bridge!!!\",\r\n      };\r\n    },\r\n  };\r\n}\r\n\r\nexport default jsBridge;\r\n","import jsBridge from \"../bridge\";\r\nimport { MResponse, MResponseWithData } from \"../types\";\r\n\r\nexport function sqliteOpenDB(\r\n  path: string,\r\n): Promise<MResponseWithData<{ dbKey: number }>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteOpenDB\",\r\n    data: {\r\n      path,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteCloseDB(dbKey: number): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteCloseDB\",\r\n    data: {\r\n      dbKey,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqlitePrepare(\r\n  dbKey: number,\r\n  sql: string,\r\n): Promise<MResponseWithData<{ stmtKey: number; reader: boolean }>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqlitePrepare\",\r\n    data: {\r\n      dbKey,\r\n      sql,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteStatementAll(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<MResponseWithData<unknown[]>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteStatementAll\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteStatementRun(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<\r\n  MResponseWithData<{\r\n    changes: number | bigint;\r\n    lastInsertRowid: number | bigint;\r\n  }>\r\n> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteStatementRun\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteExecute(\r\n  dbKey: number,\r\n  sql: string,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<\r\n  MResponseWithData<{\r\n    reader: boolean;\r\n    runRes?: {\r\n      changes: number | bigint;\r\n      lastInsertRowid: number | bigint;\r\n    };\r\n    entityData?: unknown[];\r\n  }>\r\n> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteExecute\",\r\n    data: {\r\n      dbKey,\r\n      sql,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteCreateIterator(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n  parameters: ReadonlyArray<unknown>,\r\n): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteCreateIterator\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n      parameters,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteIteratorNext(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n): Promise<MResponseWithData<unknown | undefined>> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteIteratorNext\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n    },\r\n  });\r\n}\r\n\r\nexport function sqliteIteratorRelease(\r\n  dbKey: number,\r\n  stmtKey: number,\r\n): Promise<MResponse> {\r\n  return jsBridge.callNative({\r\n    api: \"sqliteIteratorRelease\",\r\n    data: {\r\n      dbKey,\r\n      stmtKey,\r\n    },\r\n  });\r\n}\r\n"],"mappings":"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","names":[]}